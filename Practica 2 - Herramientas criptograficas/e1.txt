-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

HERRAMIENTAS CRIPTOGRÁFICAS: USO DE COMANDOS

Esta práctica consiste en aprender a utilizar diferentes comandos como
GPG, OpenSSL etc.

ENTREGA: el usuario debe responder a las preguntas en este mismo fichero,
en el hueco indicado. SE DEBE RESPONDER DE FORMA RAZONADA
A TODOS LOS PUNTOS EN LOS QUE APARECE EL HUECO DE RESPUESTA (indicando
comandos, procedimiento que se ha seguido, etc.).

Las respuestas deben estar escritas en texto plano UTF-8 **CORRECTAMENTE
FORMATEADO** , respondiendo a las preguntas, resumiendo los pasos que
ha tenido que seguir para realizar cada apartado de la práctica y
especificando los comandos que ha ejecutado. SE DEBEN ESPECIFICAR TODOS
LOS COMANDOS PARA REALIZAR CADA PARTE DE CADA APARTADO DEL ENUNCIADO,
COPIANDO EL TEXTO DEL TERMINAL (TANTO COMANDO COMO SALIDA, SIEMPRE QUE
NO SEA MUY LARGA LA SALIDA).

Entregue la memoria como indica el último apartado del enunciado.

- -----------------------------------------------------

1. Cree su par de claves GPG, eligiendo como algoritmo RSA de 4096
bits (tanto firma como cifrado) y que caduque en 5 años.
Elija una passphrase segura. Deberá entregar el fichero con la clave
GPG exportada en el último apartado.

2. Descargue la clave pública del profesor y guárdela en
su anillo de claves. Puede descargar la clave del profesor Enrique
Soriano de:

	http://gsyc.urjc.es/~esoriano

También se puede conseguir de los servidor de claves GPG, como
https://keyserver.ubuntu.com (puedes buscar otros servidores en google).

Compruebe que en ambos sitios (la página personal y un servidor de claves
GPG) la clave pública de Enrique Soriano es la misma.

RESPUESTA:
====================================================
Crear par de claves GPG: gpg --full-gen-key
Exportar clave pública: gpg --output clave.gpg --armor --export walter.humphrey17@gmail.com

Descargar la clave pública: http://gsyc.urjc.es/~esoriano
Importamos: gpg --import publickey.asc


====================================================

3. Después de descargarlas ¿puede estar seguro de que esas claves descargadas
son auténticas y pertenecen a Enrique Soriano? ¿Por qué?

RESPUESTA:
====================================================
No, porque ...





====================================================

4. ¿Cómo puede comprobar que la clave descargada pertenece realmente a
Enrique Soriano?


RESPUESTA:
====================================================
Preguntar por fingerprint y comparar:
Fingeprint es 0ACA F90A 5363
Comprobamos con: gpg --list-keys
Fingerprint 0ACAF90A5363

Si pertenece realmente a Enrique Soriano.

====================================================


5. Si es así, firme la clave del profesor y suba la firma al servidor GPG
de Ubuntu: https://keyserver.ubuntu.com. Asigne también un nivel de confianza
completo (full) a Enrique Soriano.

6. Compruebe la autenticidad y la integridad de las tres versiones
del enunciado que están disponibles (1, 2, 3). ¿Puede asegurar que
alguna de las versiones fue publicada por el profesor? ¿Cuál o cuáles?
¿Por qué?

RESPUESTA:
====================================================

Firmar la clave: gpg --sign-key enrique.soriano@urjc.es
Subir firma al servidor: pg --keyserver keyserver.ubuntu.com --send-keys F90A5363
Asignar nivel de confianza: 
gpg --edit-key enrique.soriano@urjc.es
Trust
5

6. ?????????


====================================================

7. Descargue el fichero secret.gpg, cifrado con una clave simétrica
y descífrelo. El secreto para descifrar el fichero es TOPSECRET.
¿Con qué algoritmo estaba cifrado? ¿Qué contiene el mensaje en claro?

RESPUESTA:
====================================================
Desciframos: gpg --output de --decrypt secret.gpg
Estaba sigrafo con: AES256.CFB
Contiene: Una imágen de la escultura de un tigre

====================================================

8. Descargue la firma separada del mensaje en claro (secret.sig).
Verifique la firma.

¿Puede estar seguro de que el mensaje es integro (no ha sido
modificado por un atacante)? ¿Puede el profesor repudiar dicho
mensaje?

RESPUESTA:
====================================================
Verificamos la firma separada: gpg --verify secret.sig de

No podemos estar seguros de que es integro ya estamos verificando 
la firma separada el mensaje en claro pero no la de el mensaje cifrado original.

====================================================

9. ¿Oculta dicha imagen algún mensaje con técnicas de esteganografía
mediante la herramienta steghide? Pruebe con la misma contraseña
usada para descifrar el fichero.

RESPUESTA:
====================================================
steghide --extract -sf de -xf newde

Mensaje oculto: BASE64 NO ES CIFRADO

====================================================

10. Cifre esa misma imagen con el algoritmo de clave simétrica AES, con
una clave de 256 bits, usando el comando gpg.

Haga lo mismo usando el comando openssl. En ambos casos tiene que usar
el modo CBC.

COMANDOS:
====================================================
GPG: gpg --output deCAES.gpg --symmetric --cipher-algo AES256 de

OPENSSL: openssl aes-256-cbc -in de -out deCAES.ssl

====================================================

11. Calcule el resumen hash SHA-1 para los dos cifrados anteriores.
¿Coinciden? ¿Deberían coincidir? ¿Por qué?

COMANDO Y RESPUESTA:
====================================================

sha1sum deCAES.gpg
bc878374246d7934132162b9e2279d6d67fd8fcf  deCAES.gpg

sha1sum deCAES.ssl 
db51eedf80e0926322e49d88df511e9aaa918665  deCAES.ssl

No coinciden, no deben coincidir ya que fueron cifrados con ???
====================================================

12. Descifre ambos ficheros y compruebe que los datos descifrados son
exactamente los mismos que los originales, generando una hash o usando
un comando Unix para comparar dos ficheros:

COMANDOS:
====================================================

gpg --output decypher1 --decrypt deCAES.gpg

openssl aes-256-cbc -d -in deCAES.ssl -out decypher2

sha1sum decypher1
3186bf5614c4aff1b63ae23d5b90e9550201ba51  decypher1

sha1sum decypher2
3186bf5614c4aff1b63ae23d5b90e9550201ba51  decypher2

====================================================

13. Genere un certificado X.509 en texto plano para la compañía ACME,
con correo electrónico pepe@acme.jp. La clave RSA tiene que ser de
4096 bits y el certificado debe ser válido por un año desde su
creación. Indique su número de serie:

COMANDOS:
====================================================

openssl req -new -nodes -x509 -newkey 4096 -out cert.pem -keyout privkey.pem -days 365 -subj "/C=DE/ST=NRW/L=Earth/O=ACME/OU=IT/CN=lsub.org/emailAddress=pepe@acme.jp"

Numero de serie: 70 02 95 43 C1 CF 4D 5D D5 48 90 8B C4 62 C9 28 88 51 3D 58

====================================================

14. ¿Cuál es el número de serie y el fingerprint del certificado
X509 que usa www.urjc.es? ¿Para qué dominios es válido? Decodifica
el certificado con el comando openssl.

RESPUESTA:
====================================================

openssl x509 -in www.urjc.es -text
openssl x509 -in www.urjc.es -noout -sha1 -fingerprint

Numero de serie: d7:7d:09:d0:55:f4:78:00:db:85:23:0a:81:d3:0d:d4
Fingerprint: C2:62:05:C4:1B:5C:34:29:16:FF:76:28:C1:E2:DB:DE:AF:21:CB:34

Dominios: ???
====================================================


15. Verifique la cadena de confianza del certificado del punto anterior
con el comando openssl. En un sistema GNU/Linux, los certificados raíz
del sistema se encuentran en el directorio /etc/ssl/certs.

RESPUESTA:
====================================================






====================================================


16. Entregue este enunciado con las respuestas, correctamente firmado
y cifrado para que sólo Enrique Soriano pueda leerlo. Tiene que copiar
los datos cifrados/firmados en formato PEM (base64) en la actividad del
Aula Virtual.

También debe entregar un fichero con su clave pública, llamado clave.gpg
(como archivo enviado adjunto). Este fichero debe ser importable
directamente con el comando gpg --import.
-----BEGIN PGP SIGNATURE-----

iQIzBAEBCgAdFiEEx9w9VDmfw50pCmHJqNbZ9QBUu6YFAmNO4A8ACgkQqNbZ9QBU
u6ZRiA//fhb+Re0CDI3YMU8XLYPX5r66Tjq3uV+kE/Qzus5NOYmG2tbAoMWzcItn
JaeE2/z84Oc1feWGKzkTFy0ZIAnZr+U9FCFSCXOHEkOmRtbzxxYKQ0NTDfiLue45
Xpc/Kc+tUjAGM8eJXDOUWDEGnx8cyiT6RbX+T5FUthXMEMeAJw/jDfnirNkNwqDO
J2W1udsdnZEkMbeso6ugFd3e9BE3EViujFQ6s8W241TxjCod1nBUv7dSxHg1VQRh
0/jNkt1X5RVZhAJsTtaxoVuKIVvRG4JmVPnt4Ykfl49HhapYt2TjjGO9QhnCq4bU
2Qnt7czVyyVN9rs4fUivUt7X9Vk0X0FXNacKKoCbsXnBXDosLXBQv6IufFBKjAIr
QqIsJpJmuK1vuas36sx1jBhZ3eJF/oT0dtu+E6FVCRodnUiuJWD+DH+0AfSZSN2C
zFaHj1Mb+zjhQlfDipnlikIMUC0wo7IDCiK7npzx37N1bFiXSW3ZNTPj4KVcml0V
IrayQSUEeffBQRJVHulJx/wOOCSpre7pxedIYTVHEk3SwoRAntEaARTpaWKRln4q
7CcySISMJkrlUs7sHK1l1ygX5Chg83zc+NwhfRJp+oLvdXq7p8xZ4E2joe1aqT6w
j7CboUr7hhJg/t4OV6vMlwynwsZnv92cxC6uYIwESzCqP4YZ6T8=
=WKIY
-----END PGP SIGNATURE-----
